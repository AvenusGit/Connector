@model ConnectorCenter.Views.VisualScheme.GenerateCssModel
@{

}
@functions{
    private string ToCssColor(string wpfColor){
        string opacity = wpfColor.Substring(1,2);
        wpfColor = wpfColor.Remove(1,2);
        return wpfColor + opacity;
    }
}

.col-4{
    margin:0px;
    padding:2px;
}
.col-2{
    margin:0px;
    padding:2px;
}
.col-3{
    margin:0px;
    padding:2px;
}

html {
  position: relative;
  min-height: 100%;
  min-width: 100%;
}

body {
    background: linear-gradient(20deg, @ToCssColor(Model.Scheme.ColorScheme.Fone.Color),
        @ToCssColor(Model.Scheme.ColorScheme.SubAccent.Color),
        @ToCssColor(Model.Scheme.ColorScheme.Fone.Color),
        @ToCssColor(Model.Scheme.ColorScheme.SubAccent.Color),
        @ToCssColor(Model.Scheme.ColorScheme.Fone.Color))

}

.panel {
    background: @ToCssColor(Model.Scheme.ColorScheme.Panel.Color);
    border-radius: 10px;
    box-shadow: rgba(30,22,30,1), 50px 50px, inset;
    width: 100%;
    height:100%;
    box-shadow: -10px 0px 20px @ToCssColor(Model.Scheme.ColorScheme.SubAccent.Color);;
}
.panelButton {
    outline: none;
    border-color: transparent;
    background: @ToCssColor(Model.Scheme.ColorScheme.Panel.Color);
    border-radius: 10px;
    margin: 0px;
    width: 100%;
    height:100%;
    box-shadow: 0px 0px 100px @ToCssColor(Model.Scheme.ColorScheme.SubAccent.Color);
}
.panelButton:hover {
    transition: margin linear 350ms;
    transition: box-shadow linear 50ms;
    margin: 1px;
    box-shadow: 0px 0px 10px @ToCssColor(Model.Scheme.ColorScheme.SubAccent.Color);
}
.path{
    fill: @ToCssColor(Model.Scheme.ColorScheme.Path.Color);
    box
}

.button{
    background: @ToCssColor(Model.Scheme.ColorScheme.Panel.Color);
    Color: @ToCssColor(Model.Scheme.ColorScheme.Text.Color);
    border-radius: 5px;
    border: 1px solid @ToCssColor(Model.Scheme.ColorScheme.Border.Color);
    padding:  5px 20px 5px 20px;
    box-shadow: none;
    max-height: 5vh;
    font-size: 2vh;
    font-family: @Model.Scheme.FontScheme.Font;
    color: @ToCssColor(Model.Scheme.ColorScheme.Text.Color);
}
.button:hover {
    transition: border-color linear 150ms;
    border-color: @ToCssColor(Model.Scheme.ColorScheme.SubAccent.Color);
}

.iconButton{
    background: @ToCssColor(Model.Scheme.ColorScheme.Panel.Color);
    Color: @ToCssColor(Model.Scheme.ColorScheme.Text.Color);
    border: 1px solid @ToCssColor(Model.Scheme.ColorScheme.Border.Color);
    padding:  0px;
    box-shadow: none;
    width: 4vh;
    border-radius: 2vh;
    height: 4vh;
    color: @ToCssColor(Model.Scheme.ColorScheme.Path.Color);
}
.iconButton:hover {
    transition: border-color linear 150ms;
    border-color: @ToCssColor(Model.Scheme.ColorScheme.SubAccent.Color);
}

.text{
    color: @ToCssColor(Model.Scheme.ColorScheme.Text.Color);
    font-family: @Model.Scheme.FontScheme.Font;
    font-size: 2vh;
}
.textLogo{
    color: @ToCssColor(Model.Scheme.ColorScheme.Text.Color);
    font-family: @Model.Scheme.FontScheme.Font;
    font-size: 3vh;
}
.textLogoMainMenu{
    font-size: 3vh;
}
.textbox{
    background: @ToCssColor(Model.Scheme.ColorScheme.Panel.Color);
    border-width: 0 0 1px 0;
    border-color: @ToCssColor(Model.Scheme.ColorScheme.Border.Color);
    font-family: @Model.Scheme.FontScheme.Font;
    font-size: 2vh;
}
.textbox:focus{
    outline: none;
    transition: border-color linear 150ms;
    border-color: @ToCssColor(Model.Scheme.ColorScheme.Accent.Color);
}
.isError{
    color: @ToCssColor(Model.Scheme.ColorScheme.Error.Color);
}
.isDisable{
    backGround: @ToCssColor(Model.Scheme.ColorScheme.Disable.Color);
}
.separator{
    background: @ToCssColor(Model.Scheme.ColorScheme.Border.Color);
}

select {
    -webkit-appearance: none;
    -moz-appearance: none;
    -ms-appearance: none;
    appearance: none;
    outline: 0;
    border: 0 !important;
    background: @ToCssColor(Model.Scheme.ColorScheme.Panel.Color);
    background-image: none;
    flex: 1;
    padding: 0 .5em;
    color: @ToCssColor(Model.Scheme.ColorScheme.Text.Color);
    cursor: pointer;
    font-size: 2vh;
    font-family: @Model.Scheme.FontScheme.Font;
}

    select::-ms-expand {
        display: none;
    }

.select {
    position: relative;
    display: flex;
    line-height: 4vh;
    overflow: hidden;
    background: @ToCssColor(Model.Scheme.ColorScheme.Border.Color);
    padding: 1px;
    font-size: 2vh;
    text-align:center;
    border-radius: 4px;
    border: 0px 0px 1px 0px solid @ToCssColor(Model.Scheme.ColorScheme.Border.Color);
    color: @ToCssColor(Model.Scheme.ColorScheme.Path.Color);

}

    .select::after {
        content: '\25BC';
        position: absolute;
        top: 0;
        right: 0;
        padding: 0 1em;
        cursor: pointer;
        pointer-events: none;
        transition: .25s all ease;
    }

    .select:hover::after {
        color: @ToCssColor(Model.Scheme.ColorScheme.SubAccent.Color);
    }

    ::-webkit-scrollbar {
    width: 5px;
    height: 5px;
    cursor: pointer;
    border-radius: 10px;
}

::-webkit-scrollbar-track {
    margin: 2vh 0px 2vh 0px;
    -webkit-box-shadow: inset 0 0 3px 2px rgba(0,0,0,0.3);
    background: @ToCssColor(Model.Scheme.ColorScheme.Panel.Color);
    border-radius: 10px;
}

::-webkit-scrollbar-thumb {
    background: @ToCssColor(Model.Scheme.ColorScheme.SubAccent.Color);
    border-radius: 10px;
    -webkit-box-shadow: inset 0 0 6px @ToCssColor(Model.Scheme.ColorScheme.Accent.Color);
}

.scrollDiv{
    position:relative;
    height:100%;
    overflow:auto;
}
textarea {
    color: @ToCssColor(Model.Scheme.ColorScheme.Text.Color);
    font-size: 1.5vh;
    background: @ToCssColor(Model.Scheme.ColorScheme.Panel.Color);
    border: 0px solid @ToCssColor(Model.Scheme.ColorScheme.Border.Color);
    outline: none;
    overflow: auto;
    resize: none;
}

