@using System.Drawing;
@using System.Globalization;
@model ConnectorCenter.Views.Js.JsModel
@{

}

const ctx = document.getElementById('myChart').getContext('2d');
const myChart = new Chart(ctx,
    {
        type: 'line',
        options: {
            animation: false,
            scales: {
                x: {
                    color: 'Model.Scheme.ColorScheme.Border',
                    display: true,
                    text: 'Время',
                    ticks: {
                        family: '@Model.Scheme.FontScheme.Font',
                        color: '@Model.Scheme.ColorScheme.Text'
                    }
                },
                y: {
                    color: '@Model.Scheme.ColorScheme.Text',
                    beginAtZero: true,
                    display: true,
                    suggestedMax: 10,
                    text: 'Количество запросов',
                    ticks: {
                        stepSize: 1,
                        family: '@Model.Scheme.FontScheme.Font',
                        color: '@Model.Scheme.ColorScheme.Text'
                    }
                }
            },
            plugins: {
                legend: {
                    labels: {
                        font: {
                            family: '@Model.Scheme.FontScheme.Font'
                        }
                    }
                }
            }
        }
    }
);
function addData(chart, data) {
    chart.data = data;
    chart.update();
}

function removeData(chart) {
    chart.data.labels.pop();
    chart.data.datasets.forEach((dataset) => {
        dataset.data.pop();
    });
    chart.update();
}
function getCheckedElementName() {
    if (document.getElementById("min").checked) {
        return "min";
    }
    if (document.getElementById("hour").checked) {
        return "hour";
    }
    if (document.getElementById("day").checked) {
        return "day";
    }
}

async function SetData(datatype) {
    let apiData = (await fetch('/api/statistic/' + datatype, {
        method: 'GET',
        mode: 'no-cors',
        cache: 'no-cache',
        credentials: 'same-origin',
    }))
    let apiStatistic = await apiData.json();
    updateCounters(apiStatistic);
    let data;

    data = {
        labels: [],
        datasets: [
            {
                label: 'Статистика за минуту',
                data: apiStatistic.StatisticQueue,
                color: '@Model.Scheme.ColorScheme.Text',
                borderColor: '@Model.Scheme.ColorScheme.SubAccent',
                backgroundColor: '@Model.Scheme.ColorScheme.Path',
                tension: 0.5
            }
        ]
    }
    for (var i = apiStatistic.StatisticQueue.length - 1; i >= 0; i--) {
            data.labels.push(i);    
        }  

    switch (datatype) {
        case 'min':            
            data.datasets[0].label = 'Статистика за минуту';
            break;
        case 'hour':
            data.datasets[0].label = 'Статистика за час';
            break;
        case 'day':
            data.datasets[0].label = 'Статистика за день';
            break;
    }
    removeData(myChart);
    addData(myChart, data);
    myChart.update();
}
function SetDataInChart(dataType) {
    SetData(dataType);
}

function setDataEventHandler() {
    SetDataInChart(getCheckedElementName());
}
function updateCounters(statistics){
    let counter = document.getElementById("allCounter");
    counter.innerHTML = 'Всего запросов: ' + statistics.Requests;
    counter = document.getElementById("webCounter");
    counter.innerHTML = 'Web запросов: ' + statistics.WebRequest;
    counter = document.getElementById("apiCounter");
    counter.innerHTML = 'Api запросов: ' + statistics.ApiRequest;
    counter = document.getElementById("avrCounter");
    counter.innerHTML = 'В среднем в секунду: ' + statistics.AverageInMinute.toFixed(3);
    counter = document.getElementById("upTime");
    const timespan = statistics.UpTime.split(':');
    counter.innerHTML = 'С момента запуска: ' + timespan[0] +
        'д ' + timespan[1] + 'ч ' + timespan[2] +
        'м ' + timespan[3] + 'c';
}

SetDataInChart("min");
let timerId = window.setInterval(function () { SetDataInChart(getCheckedElementName()) }, 1000);